// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  email     String         @unique
  username  String
  image     String
  results   RaceResult[]
  photos    RacePhoto[]
  distances RaceDistance[]
}

model RaceResult {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  date         DateTime     @default(now())
  race         String
  distance     RaceDistance @relation(fields: [raceDistance], references: [distance], onDelete: Cascade)
  time         String
  userId       String       @db.ObjectId
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime     @default(now())
  raceDistance String

  @@index([userId])
}

model RacePhoto {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  caption   String   @default("")
  image     String
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@index([userId])
}

model RaceDistance {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  distance   String       @unique() @default("")
  userId     String       @db.ObjectId
  user       User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt  DateTime     @default(now())
  RaceResult RaceResult[]

  @@index([userId])
}
